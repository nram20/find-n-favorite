'use strict';

angular.module('myApp', ['ui.router', 'satellizer', 'ngFileUpload'])
	.config(function($authProvider) {

		$authProvider.loginUrl = '/api/users/login';
		$authProvider.signupUrl = '/api/users/signup';

		// configure satellizer by giving it the provider app ID
		// specify the url to make a post request to when the token is generated by satellizer
		$authProvider.facebook({
			clientId: '1153082801420831',
			url: '/api/users/facebook'
		});

	})
	.config(function($stateProvider, $urlRouterProvider) {
		$stateProvider
			.state('home', { url: '/', templateUrl: '/html/home.html' })
			.state('login', {
				url: '/login',
				templateUrl: '/html/login.html',
				controller: 'loginCtrl'
			})
			.state('register', {
				url: '/register',
				templateUrl: '/html/register.html',
				controller: 'registerCtrl'
			})
			.state('profile', {
				url: '/profile',
				templateUrl: '/html/profile.html',
				controller: 'profileCtrl',
				resolve: {
					Profile: function(User) {
						return User.getProfile();
					}
				}
			})
			.state('search', {
				url: '/search',
				templateUrl: '/html/search.html',
				controller: 'searchCtrl'
			})
			.state('businessShow', {
				url: '/businessShow/:yelpId',
				templateUrl: '/html/businessShow.html',
				controller: 'businessShowCtrl',
				resolve: {
					BusinessById: function($stateParams, Business) {
						return Business.searchById($stateParams.yelpId);
					},
					BusinessFavorites: function($stateParams, Business) {
						return Business.countFavorites($stateParams.yelpId);
					}
				}
			})

		$urlRouterProvider.otherwise('/');
	})
	// create a new filter -- titlecase filter
	// everytime a value changes that uses this filter, this function will get triggered
	// and it'll also trigger right away upon initial page load
	.filter('titlecase', function() { // give it the standard dependency-injecting function
		// return the filter function
		return function(inputStr) {
			if (typeof inputStr !== 'string' || !inputStr.length) return;
			console.log('inputStr:', inputStr);

			// return the updated string
			return inputStr.toLowerCase()
				.split(' ')
				.map(word => word[0].toUpperCase() + word.slice(1))
				.join(' ');
		}
	})
	.filter('total', function() { // potentially useful for updating totals; alternative to $scope.$watch
		return function(nums) { // given input array
			return nums.reduce((sum, num) => sum + num, 0); // get sum
		}
	})
